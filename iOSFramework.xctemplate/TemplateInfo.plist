<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Ancestors</key>
	<array>
		<string>com.apple.dt.unit.base</string>
		<string>com.apple.dt.unit.iPhoneBase</string>
	</array>
	<key>Components</key>
	<array>
		<dict>
			<key>Identifier</key>
			<string>com.apple.dt.unit.cocoaTouchFrameworkUnitTestBundle</string>
			<key>Name</key>
			<string>___PACKAGENAME___Tests</string>
		</dict>
	</array>
	<key>Concrete</key>
	<true/>
	<key>Definitions</key>
	<dict>
		<key>___PACKAGENAMEASIDENTIFIER___.h</key>
		<dict>
			<key>Path</key>
			<string>___PACKAGENAMEASIDENTIFIER___.h</string>
			<key>TargetIndices</key>
			<array>
				<integer>0</integer>
			</array>
		</dict>
		<key>___PACKAGENAME___-Prefix.pch:objC:importFoundation</key>
		<string>#import &lt;Foundation/Foundation.h&gt;
            </string>
	</dict>
	<key>Description</key>
	<string>This template builds an iOS framework</string>
	<key>Identifier</key>
	<string>com.apple.dt.unit.iosFramework</string>
	<key>Kind</key>
	<string>Xcode.Xcode3.ProjectTemplateUnitKind</string>
	<key>Nodes</key>
	<array>
		<string>___PACKAGENAME___-Prefix.pch:objC:importFoundation</string>
		<string>___PACKAGENAMEASIDENTIFIER___.h</string>
	</array>
	<key>Targets</key>
	<array>
		<dict>
			<key>BuildPhases</key>
			<array>
				<dict>
					<key>Class</key>
					<string>Sources</string>
				</dict>
				<dict>
					<key>Class</key>
					<string>Frameworks</string>
				</dict>
				<dict>
					<key>Class</key>
					<string>CopyFiles</string>
					<key>DstPath</key>
					<string>include/$(PRODUCT_NAME)</string>
					<key>DstSubfolderSpec</key>
					<integer>16</integer>
				</dict>
				<dict>
					<key>Class</key>
					<string>Headers</string>
				</dict>
				<dict>
					<key>Class</key>
					<string>ShellScript</string>
					<key>Name</key>
					<string>Prepare Framework</string>
					<key>ShellPath</key>
					<string>/bin/sh</string>
					<key>ShellScript</key>
					<string>set -e

mkdir -p &quot;${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.framework/Versions/A/Headers&quot;

# Link the &quot;Current&quot; version to &quot;A&quot;
/bin/ln -sfh A &quot;${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.framework/Versions/Current&quot;
/bin/ln -sfh Versions/Current/Headers &quot;${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.framework/Headers&quot;
/bin/ln -sfh &quot;Versions/Current/${PRODUCT_NAME}&quot; &quot;${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.framework/${PRODUCT_NAME}&quot;

# The -a ensures that the headers maintain the source modification date so that we don&apos;t constantly
# cause propagating rebuilds of files that import these headers.
/bin/cp -a &quot;${TARGET_BUILD_DIR}/${PUBLIC_HEADERS_FOLDER_PATH}/&quot; &quot;${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.framework/Versions/A/Headers&quot;
</string>
				</dict>
			</array>
			<key>Frameworks</key>
			<array>
				<string>Foundation</string>
			</array>
			<key>ProductType</key>
			<string>com.apple.product-type.library.static</string>
			<key>SharedSettings</key>
			<dict>
				<key>DSTROOT</key>
				<string>/tmp/___PACKAGENAMEASIDENTIFIER___.dst</string>
				<key>GCC_PRECOMPILE_PREFIX_HEADER</key>
				<string>YES</string>
				<key>GCC_PREFIX_HEADER</key>
				<string>___PACKAGENAME___/___PACKAGENAME___-Prefix.pch</string>
				<key>OTHER_LDFLAGS</key>
				<string>-ObjC</string>
				<key>SKIP_INSTALL</key>
				<string>YES</string>
				<key>PUBLIC_HEADERS_FOLDER_PATH</key>
				<string>$(PROJECT_NAME)Headers</string>
				<key>DEAD_CODE_STRIPPING</key>
				<string>NO</string>
				<key>COPY_PHASE_STRIP</key>
				<string>NO</string>
				<key>STRIP_STYLE</key>
				<string>Non-Global Symbols</string>
			</dict>
		</dict>
		<dict>
			<key>BuildPhases</key>
			<array>
				<dict>
					<key>Class</key>
					<string>ShellScript</string>
					<key>Name</key>
					<string>Cross Platform</string>
					<key>ShellPath</key>
					<string>/bin/sh</string>
					<key>ShellScript</key>
					<string>set -e
set +u
# Avoid recursively calling this script.
if [[ $SF_MASTER_SCRIPT_RUNNING ]]
then
    exit 0
fi
set -u
export SF_MASTER_SCRIPT_RUNNING=1

SF_TARGET_NAME=${PROJECT_NAME}
SF_EXECUTABLE_PATH=&quot;lib${SF_TARGET_NAME}.a&quot;
SF_WRAPPER_NAME=&quot;${SF_TARGET_NAME}.framework&quot;

# The following conditionals come from
# https://github.com/kstenerud/iOS-Universal-Framework

if [[ &quot;$SDK_NAME&quot; =~ ([A-Za-z]+) ]]
then
    SF_SDK_PLATFORM=${BASH_REMATCH[1]}
else
    echo &quot;Could not find platform name from SDK_NAME: $SDK_NAME&quot;
    exit 1
fi

if [[ &quot;$SDK_NAME&quot; =~ ([0-9]+.*$) ]]
then
    SF_SDK_VERSION=${BASH_REMATCH[1]}
else
    echo &quot;Could not find sdk version from SDK_NAME: $SDK_NAME&quot;
    exit 1
fi

if [[ &quot;$SF_SDK_PLATFORM&quot; = &quot;iphoneos&quot; ]]
then
    SF_OTHER_PLATFORM=iphonesimulator
else
    SF_OTHER_PLATFORM=iphoneos
fi

if [[ &quot;$BUILT_PRODUCTS_DIR&quot; =~ (.*)$SF_SDK_PLATFORM$ ]]
then
    SF_OTHER_BUILT_PRODUCTS_DIR=&quot;${BASH_REMATCH[1]}${SF_OTHER_PLATFORM}&quot;
else
    echo &quot;Could not find platform name from build products directory: $BUILT_PRODUCTS_DIR&quot;
    exit 1
fi

# Build the other platform.
xcrun xcodebuild -project &quot;${PROJECT_FILE_PATH}&quot; -target &quot;${TARGET_NAME}&quot; -configuration &quot;${CONFIGURATION}&quot; -sdk ${SF_OTHER_PLATFORM}${SF_SDK_VERSION} BUILD_DIR=&quot;${BUILD_DIR}&quot; OBJROOT=&quot;${OBJROOT}&quot; BUILD_ROOT=&quot;${BUILD_ROOT}&quot; SYMROOT=&quot;${SYMROOT}&quot; $ACTION

# Smash the two static libraries into one fat binary and store it in the .framework
xcrun lipo -create &quot;${BUILT_PRODUCTS_DIR}/${SF_EXECUTABLE_PATH}&quot; &quot;${SF_OTHER_BUILT_PRODUCTS_DIR}/${SF_EXECUTABLE_PATH}&quot; -output &quot;${BUILT_PRODUCTS_DIR}/${SF_WRAPPER_NAME}/Versions/A/${SF_TARGET_NAME}&quot;

# Copy the binary to the other architecture folder to have a complete framework in both.
cp -a &quot;${BUILT_PRODUCTS_DIR}/${SF_WRAPPER_NAME}/Versions/A/${SF_TARGET_NAME}&quot; &quot;${SF_OTHER_BUILT_PRODUCTS_DIR}/${SF_WRAPPER_NAME}/Versions/A/${SF_TARGET_NAME}&quot;</string>
				</dict>
			</array>
			<key>Name</key>
			<string>Framework</string>
			<key>TargetType</key>
			<string>Aggregate</string>
			<key>SharedSettings</key>
			<dict>
				<key>PRODUCT_NAME</key>
				<string>$(TARGET_NAME)</string>
			</dict>
			<key>Dependencies</key>
			<array>
				<integer>0</integer>
			</array>
		</dict>
	</array>
</dict>
</plist>
